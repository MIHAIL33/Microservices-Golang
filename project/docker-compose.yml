version: "3"

services:

  broker:
    container_name: broker-service
    build:
      context: ./../broker
      dockerfile: ./../broker/broker.dockerfile
    restart: always
    ports:
      - "8001:80"
    deploy:
      mode: replicated
      replicas: 1

  auth:
    container_name: auth-service
    build:
      context: ./../auth
      dockerfile: ./../auth/auth.dockerfile
    restart: always
    ports:
      - "8002:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger:
    container_name: logger-service
    build:
      context: ./../logger
      dockerfile: ./../logger/logger.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mail:
    container_name: mail-service
    build:
      context: ./../mail
      dockerfile: ./../mail/mail.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_FROMNAME: "MIHAIL_WAS"
      MAIL_FROMADDRESS: "mihail_was@test.com"

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    container_name: mailhog
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"